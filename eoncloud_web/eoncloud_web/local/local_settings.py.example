
#-*- coding=utf-8 -*-

from datetime import timedelta
import ldap
from django_auth_ldap.config import LDAPSearch

SECRET_KEY = '@ybbpz49p^1x#0&un2!8i4*!9k#dav&83l7sl-ib%)-$t3jyfj'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "cloud_web",
        'USER': "cloud_web",
        'PASSWORD': "password",
        'HOST': "127.0.0.1",
        'PORT': "3306",
        'TEST_CHARSET': 'utf8',
        'OPTIONS': {
            'init_command': 'SET storage_engine=INNODB',
        }
    }
}

BROKER_URL = "amqp://eoncloud_web:password@127.0.0.1:5672/eoncloud"

# sync instance status interval
INSTANCE_SYNC_INTERVAL_SECOND = 10
# max loop count for sync instance status
MAX_COUNT_SYNC = 30

# enabled quota check
QUOTA_CHECK = True
MULTI_ROUTER_ENABLED = False
WORKFLOW_ENABLED = False
CAPTCHA_ENABLED = False
SIGNUP_ENABLED = True

# After user signup, send a email instead of create udc directly
REGISTER_ACTIVATE_EMAIL_ENABLED = True
# The expire days after activate mail sent
ACTIVATE_EMAIL_EXPIRE_DAYS = timedelta(30)

EMAIL_HOST = "smtp.eoncloud.com.cn"
EMAIL_PORT = "25"
EMAIL_HOST_USER = "admin@eoncloud.com.cn"
EMAIL_HOST_PASSWORD = '123456'
DEFAULT_FROM_EMAIL = "admin@eoncloud.com.cn"

MCC = {
    "1": u"金融",
    "2": u"军工",
}

SOURCE = {
    "1": "InfoQ",
    "2": "CSDN",
}

USER_TYPE = {
    "1": u"个人用户",
    "2": u"企业用户",
}

# quota items
QUOTA_ITEMS = {
    "instance": 0,
    "vcpu": 0,
    "memory": 0,
    "floating_ip": 0,
    "volume": 0,
    "volume_size": 0,
}

# default name
DEFAULT_NETWORK_NAME = u"默认网络"
DEFAULT_SUBNET_NAME = u"默认子网"
DEFAULT_ROUTER_NAME = u"默认路由"
DEFAULT_FIREWALL_NAME = u"默认防火墙"
# openstack name format "{prefix}-{xxx}-{id}"
OS_NAME_PREFIX = u"eon"

# backup config
RBD_COMPUTE_POOL = "compute"
RBD_VOLUME_POOL = "volumes"
BACKUP_RBD_HOST = "root@14.14.15.4:22"
BACKUP_RBD_HOST_PWD = "r00tme"
BACKUP_COMMAND_ARGS = {
    "source_pool": None,
    "image": None,
    "mode": None,
    "rbd_image": None,
    "dest_pool": "rbd",
    "dest_user": "root",
    "dest_host": "node-7",
}
BACKUP_COMMAND = "python /opt/eontools/rbd_backup.py  -p %(source_pool)s -i %(image)s -r %(dest_pool)s -u %(dest_user)s -d %(dest_host)s -o backup -m %(mode)s"

BACKUP_RESTORE_COMMAND = "python /opt/eontools/rbd_backup.py -p %(source_pool)s -i %(image)s -r %(dest_pool)s -u %(dest_user)s -d %(dest_host)s -o restore -s %(rbd_image)s"

BACKUP_DELETE_COMMAND = "python /opt/eontools/rbd_backup.py -p %(source_pool)s -i %(image)s -r %(dest_pool)s -u %(dest_user)s -d %(dest_host)s -o delete -s %(rbd_image)s"
# backup config end

# Resource Monitor Configuration
MONITOR_ENABLED = True

MONITOR_CONFIG = {
    "enabled": MONITOR_ENABLED,
    "base_url": "http://127.0.0.1:5601",
    'monitors': [
        {
            "title": u"CPU",
            "url": "/#/visualize/edit/cpu?embed&_a=(filters:!(),linked:!f,query:(query_string:(analyze_wildcard:!t,query:'resource_id:!'{[{uuid}]}!'')),vis:(aggs:!((id:'1',params:(field:cpu_util),schema:metric,type:avg),(id:'2',params:(extended_bounds:(),field:'@timestamp',interval:{[{ interval }]},min_doc_count:1),schema:segment,type:date_histogram)),listeners:(),params:(addLegend:!f,addTooltip:!f,defaultYExtents:!f,shareYAxis:!t),type:line))"
        },
        {
            "title": u"磁盘",
            "url": "#/visualize/edit/disk?embed&_a=(filters:!(),linked:!f,query:(query_string:(analyze_wildcard:!t,query:'resource_id:{[{uuid}]}')),vis:(aggs:!((id:'1',params:(field:disk.read.bytes),schema:metric,type:avg),(id:'2',params:(field:disk.write.bytes),schema:metric,type:avg),(id:'3',params:(extended_bounds:(),field:'@timestamp',interval:{[{interval}]},min_doc_count:1),schema:segment,type:date_histogram)),listeners:(),params:(addLegend:!t,addTooltip:!t,defaultYExtents:!f,shareYAxis:!t),type:line))"
        },
        {
            "title": u"网络",
            "url": "#/visualize/edit/network?embed&_a=(filters:!(),linked:!f,query:(query_string:(analyze_wildcard:!t,query:'resource_id:{[{uuid}]}')),vis:(aggs:!((id:'1',params:(field:network.incoming.bytes.rate),schema:metric,type:avg),(id:'2',params:(field:network.outgoing.bytes.rate),schema:metric,type:avg),(id:'3',params:(extended_bounds:(),field:'@timestamp',interval:{[{interval}]},min_doc_count:1),schema:segment,type:date_histogram)),listeners:(),params:(addLegend:!t,addTooltip:!t,defaultYExtents:!f,shareYAxis:!t),type:line))"
        }
    ],
    'intervals': ['second', 'minute', 'hour', 'day', 'week', 'month']
}

# Website Configurations
BRAND = "EonCloud"
ICP_NUMBER = u"冀ICP备15016515号-1"
DNS_NAMESERVERS = ["8.8.4.4", "114.114.114.114"]
THEME_NAME = 'darkblue'
EXTERNAL_URL = 'http://127.0.0.1:8000/'

LDAP_AUTH_ENABLED = True
# Baseline configuration.
AUTH_LDAP_SERVER_URI = "ldap://127.0.0.1:389/"

AUTH_LDAP_BIND_DN = "uid=admin,ou=system"
AUTH_LDAP_BIND_PASSWORD = "12345"

AUTH_LDAP_USER_SEARCH = LDAPSearch("ou=users,dc=eoncloud,dc=com",
                                   ldap.SCOPE_SUBTREE, "(cn=%(user)s)")
# or perhaps:
# AUTH_LDAP_USER_DN_TEMPLATE = "uid=%(user)s,ou=users,dc=eoncloud,dc=com"

AUTH_LDAP_USER_ATTR_MAP = {
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail"
}

AUTH_LDAP_ALWAYS_UPDATE_USER = True

# Group relate configuration

# AUTH_LDAP_FIND_GROUP_PERMS = True
# AUTH_LDAP_MIRROR_GROUPS = True

# AUTH_LDAP_GROUP_SEARCH = LDAPSearch("ou=groups,dc=bluven,dc=me",
#                                     ldap.SCOPE_SUBTREE,
#                                     (objectClass=groupOfNames)")
# AUTH_LDAP_GROUP_TYPE = GroupOfNamesType(name_attr='cn')

# Simple group restrictions
# AUTH_LDAP_REQUIRE_GROUP = "ou=system"
# AUTH_LDAP_DENY_GROUP = "ou=system"


# Cache group memberships for an hour to minimize LDAP traffic
# AUTH_LDAP_CACHE_GROUPS = False
# AUTH_LDAP_GROUP_CACHE_TIMEOUT = 3600
# AUTH_LDAP_BIND_AS_AUTHENTICATING_USER = True
